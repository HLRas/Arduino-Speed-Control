import matplotlib.pyplot as plt
import numpy as np

# Data format: [time, left_speed, right_speed, desired_speed]
data = [
    [0.200, 0.000, 0.000, 3.000],
    [0.400, 0.000, 0.000, 3.000],
    [0.600, 0.000, 0.000, 3.000],
    [0.800, 0.000, 0.000, 3.000],
    [1.000, 0.000, 0.000, 3.000],
    [1.200, 0.250, 0.500, 3.000],
    [1.400, 3.000, 3.000, 3.000],
    [1.600, 3.500, 3.500, 3.000],
    [1.800, 3.750, 3.750, 3.000],
    [2.000, 3.500, 3.750, 3.000],
    [2.200, 3.750, 3.500, 3.000],
    [2.400, 3.750, 3.750, 3.000],
    [2.600, 3.500, 3.750, 3.000],
    [2.800, 3.750, 3.750, 3.000],
    [3.000, 3.750, 3.750, 3.000],
    [3.200, 3.500, 3.500, 3.000],
    [3.400, 3.750, 3.750, 3.000],
    [3.600, 3.750, 3.750, 3.000],
    [3.800, 3.500, 3.750, 3.000],
    [4.000, 3.750, 3.500, 3.000],
    [4.200, 3.750, 3.750, 3.000],
    [4.400, 3.500, 3.750, 3.000],
    [4.600, 3.750, 3.750, 3.000],
    [4.800, 3.750, 3.500, 3.000],
    [5.000, 3.500, 3.750, 3.000],
    [5.200, 3.500, 3.500, 3.000],
    [5.400, 3.500, 3.250, 3.000],
    [5.600, 3.250, 3.500, 3.000],
    [5.800, 3.500, 3.500, 3.000],
    [6.000, 3.500, 3.500, 3.000],
    [6.200, 3.500, 3.500, 3.000],
    [6.400, 3.500, 3.500, 3.000],
    [6.600, 3.500, 3.500, 3.000],
    [6.800, 3.500, 3.750, 3.000],
    [7.000, 3.750, 3.500, 3.000],
    [7.200, 3.500, 3.500, 3.000],
    [7.400, 3.750, 3.500, 3.000],
    [7.600, 3.500, 3.500, 3.000],
    [7.800, 3.500, 3.500, 3.000],
    [8.000, 3.500, 3.250, 3.000],
    [8.200, 3.500, 3.250, 3.000],
    [8.400, 3.500, 3.500, 3.000],
    [8.600, 3.500, 3.250, 3.000],
    [8.800, 3.250, 3.500, 3.000],
    [9.000, 3.500, 3.250, 3.000],
    [9.200, 3.250, 3.250, 3.000],
    [9.400, 3.250, 3.000, 3.000],
    [9.600, 3.000, 3.000, 3.000],
    [9.800, 3.000, 3.000, 3.000],
    [10.000, 3.000, 3.000, 3.000],
    [10.200, 2.750, 2.750, 3.000],
    [10.400, 3.000, 2.750, 3.000],
    [10.600, 2.500, 2.750, 3.000],
    [10.800, 2.750, 2.500, 3.000],
    [11.000, 2.250, 2.750, 3.000],
    [11.200, 2.500, 2.250, 3.000],
    [11.400, 2.500, 2.500, 3.000],
    [11.600, 2.250, 2.500, 3.000],
    [11.800, 2.250, 2.500, 3.000],
    [12.000, 2.500, 2.250, 3.000],
    [12.200, 2.500, 2.750, 3.000],
    [12.400, 2.500, 2.500, 3.000],
    [12.600, 2.500, 2.750, 3.000],
    [12.800, 2.750, 2.500, 3.000],
    [13.000, 2.750, 3.000, 3.000],
    [13.200, 2.750, 2.750, 3.000],
    [13.400, 3.000, 3.000, 3.000],
    [13.600, 2.750, 2.750, 3.000],
    [13.800, 3.000, 3.000, 3.000],
    [14.000, 3.000, 3.250, 3.000],
    [14.200, 3.250, 3.000, 3.000],
    [14.400, 3.000, 3.000, 3.000],
    [14.600, 3.250, 3.250, 3.000],
    [14.800, 3.250, 3.250, 3.000],
    [15.000, 3.250, 3.000, 3.000],
    [15.200, 3.000, 3.250, 3.000],
    [15.400, 3.250, 3.250, 3.000],
    [15.600, 3.250, 3.250, 3.000],
    [15.800, 3.250, 3.250, 3.000],
    [16.000, 3.250, 3.000, 3.000],
    [16.200, 3.250, 3.250, 3.000],
    [16.400, 3.250, 3.250, 3.000],
    [16.600, 3.250, 3.250, 3.000],
    [16.800, 3.250, 3.250, 3.000],
    [17.000, 3.250, 3.000, 3.000],
    [17.200, 3.250, 3.250, 3.000],
    [17.400, 3.250, 3.250, 3.000],
    [17.600, 3.000, 3.250, 3.000],
    [17.800, 3.250, 3.000, 3.000],
    [18.000, 3.000, 3.250, 3.000],
    [18.200, 3.250, 3.000, 3.000],
    [18.400, 3.000, 3.000, 3.000],
    [18.600, 3.250, 3.250, 3.000],
    [18.800, 3.000, 3.000, 3.000],
    [19.000, 2.750, 3.000, 3.000],
    [19.200, 3.000, 2.750, 3.000],
    [19.400, 3.000, 3.000, 3.000],
    [19.600, 3.000, 3.000, 3.000],
    [19.800, 2.750, 3.000, 3.000],
    [20.000, 3.000, 2.750, 3.000],
    [20.200, 2.750, 3.000, 3.000],
    [20.400, 3.000, 2.750, 3.000],
    [20.600, 2.750, 3.000, 3.000],
    [20.800, 2.750, 2.750, 3.000],
    [21.000, 2.750, 2.750, 3.000],
    [21.200, 3.000, 2.750, 3.000],
    [21.400, 2.750, 3.000, 3.000],
    [21.600, 2.750, 2.750, 3.000],
    [21.800, 2.750, 2.750, 3.000],
    [22.000, 3.000, 3.000, 3.000],
    [22.200, 2.750, 2.750, 3.000],
    [22.400, 3.000, 3.000, 3.000],
    [22.600, 2.750, 3.000, 3.000],
    [22.800, 3.000, 2.750, 3.000],
    [23.000, 3.000, 3.000, 3.000],
    [23.200, 3.000, 3.000, 3.000],
    [23.400, 3.000, 3.000, 3.000],
    [23.600, 3.000, 3.250, 3.000],
    [23.800, 3.000, 3.000, 3.000],
    [24.000, 3.250, 3.000, 3.000],
    [24.200, 3.000, 3.000, 3.000],
    [24.400, 3.000, 3.250, 3.000],
    [24.600, 3.000, 3.000, 3.000],
    [24.800, 3.250, 3.000, 3.000],
    [25.000, 3.000, 3.000, 3.000],
    [25.200, 3.000, 3.250, 3.000],
    [25.400, 3.250, 3.000, 3.000],
    [25.600, 3.000, 3.000, 3.000],
    [25.800, 3.000, 3.250, 3.000],
    [26.000, 3.250, 3.000, 3.000],
    [26.200, 3.000, 3.000, 3.000],
    [26.400, 3.000, 3.000, 3.000],
    [26.600, 3.250, 3.250, 3.000],
    [26.800, 3.000, 3.000, 3.000],
    [27.000, 3.250, 3.000, 3.000],
    [27.200, 3.000, 3.250, 3.000],
    [27.400, 3.000, 3.000, 3.000],
    [27.600, 3.250, 3.000, 3.000],
    [27.800, 3.000, 3.250, 3.000],
    [28.000, 3.000, 3.000, 3.000],
    [28.200, 3.000, 3.000, 3.000],
    [28.400, 3.000, 2.750, 3.000],
    [28.600, 3.000, 3.000, 3.000],
    [28.800, 3.000, 3.000, 3.000],
    [29.000, 3.000, 3.000, 3.000],
    [29.200, 2.750, 3.000, 3.000],
    [29.400, 3.000, 3.000, 3.000],
    [29.600, 3.000, 2.750, 3.000],
    [29.800, 3.000, 3.000, 3.000],
    [30.000, 2.750, 3.000, 3.000],
    [30.200, 3.000, 3.000, 3.000],
    [30.400, 3.000, 3.000, 3.000],
    [30.600, 2.750, 2.750, 3.000],
    [30.800, 3.000, 3.000, 3.000],
    [31.000, 3.000, 3.000, 3.000],
    [31.200, 2.750, 3.000, 3.000],
    [31.400, 3.000, 2.750, 3.000],
    [31.600, 3.000, 3.000, 3.000],
    [31.800, 3.000, 3.000, 3.000],
    [32.000, 3.000, 3.000, 3.000],
    [32.200, 3.000, 3.000, 3.000],
    [32.400, 3.000, 3.000, 3.000],
    [32.600, 3.000, 3.000, 3.000],
    [32.800, 3.000, 3.000, 3.000],
    [33.000, 2.750, 3.000, 3.000],
    [33.200, 3.250, 3.000, 3.000],
    [33.400, 3.000, 3.000, 3.000],
    [33.600, 3.000, 3.000, 3.000],
    [33.800, 3.000, 3.000, 3.000],
    [34.000, 3.000, 3.000, 3.000],
    [34.200, 3.000, 3.000, 3.000],
    [34.400, 3.250, 3.250, 3.000],
    [34.600, 3.000, 3.000, 3.000],
    [34.800, 3.000, 3.000, 3.000],
    [35.000, 3.000, 3.000, 3.000],
    [35.200, 3.000, 3.000, 3.000],
    [35.400, 3.000, 3.000, 3.000],
    [35.600, 3.000, 3.000, 3.000],
    [35.800, 3.000, 3.250, 3.000],
    [36.000, 3.250, 3.000, 3.000],
    [36.200, 3.000, 3.000, 3.000],
    [36.400, 3.000, 3.000, 3.000]
]

def plot_wheel_speeds():
    """Plot left and right wheel speeds over time"""
    # Convert data to numpy array for easier manipulation
    data_array = np.array(data)
    
    # Extract columns
    time = data_array[:, 0]
    left_speed = data_array[:, 1]
    right_speed = data_array[:, 2]
    desired_speed = data_array[:, 3]
    
    # Create the plot
    plt.figure(figsize=(12, 8))
    
    # Plot the data
    plt.plot(time, left_speed, 'b-', linewidth=2, label='Left Wheel Speed', marker='o', markersize=3)
    plt.plot(time, right_speed, 'r-', linewidth=2, label='Right Wheel Speed', marker='s', markersize=3)
    plt.plot(time, desired_speed, 'g--', linewidth=2, label='Desired Speed', alpha=0.7)
    
    # Customize the plot
    plt.xlabel('Time (seconds)', fontsize=12)
    plt.ylabel('Speed (m/s)', fontsize=12)
    plt.title('Left and Right Wheel Speeds Over Time', fontsize=14, fontweight='bold')
    plt.legend(fontsize=11)
    plt.grid(True, alpha=0.3)
    
    # Set axis limits
    plt.xlim(0, max(time) + 1)
    plt.ylim(0, max(max(left_speed), max(right_speed)) + 0.5)
    
    # Add some analysis text
    avg_left = np.mean(left_speed[left_speed > 0])  # Exclude zero values
    avg_right = np.mean(right_speed[right_speed > 0])  # Exclude zero values
    
    plt.text(0.02, 0.98, f'Average Left Speed: {avg_left:.2f} m/s\nAverage Right Speed: {avg_right:.2f} m/s', 
             transform=plt.gca().transAxes, fontsize=10, verticalalignment='top',
             bbox=dict(boxstyle='round', facecolor='wheat', alpha=0.8))
    
    # Show the plot
    plt.tight_layout()
    plt.show()

def plot_speed_difference():
    """Plot the difference between left and right wheel speeds"""
    # Convert data to numpy array
    data_array = np.array(data)
    
    # Extract columns
    time = data_array[:, 0]
    left_speed = data_array[:, 1]
    right_speed = data_array[:, 2]
    
    # Calculate speed difference
    speed_diff = left_speed - right_speed
    
    # Create the plot
    plt.figure(figsize=(12, 6))
    
    plt.plot(time, speed_diff, 'purple', linewidth=2, marker='o', markersize=3)
    plt.axhline(y=0, color='black', linestyle='-', alpha=0.3)
    
    plt.xlabel('Time (seconds)', fontsize=12)
    plt.ylabel('Speed Difference (Left - Right) [m/s]', fontsize=12)
    plt.title('Left vs Right Wheel Speed Difference Over Time', fontsize=14, fontweight='bold')
    plt.grid(True, alpha=0.3)
    
    # Add statistics
    mean_diff = np.mean(speed_diff)
    std_diff = np.std(speed_diff)
    
    plt.text(0.02, 0.98, f'Mean Difference: {mean_diff:.3f} m/s\nStd Deviation: {std_diff:.3f} m/s', 
             transform=plt.gca().transAxes, fontsize=10, verticalalignment='top',
             bbox=dict(boxstyle='round', facecolor='lightblue', alpha=0.8))
    
    plt.tight_layout()
    plt.show()

def main():
    """Main function to run all plots"""
    print("Plotting wheel speed data...")
    
    # Plot 1: Individual wheel speeds
    plot_wheel_speeds()
    
    # Plot 2: Speed difference analysis
    plot_speed_difference()
    
    print("Plotting complete!")

if __name__ == "__main__":
    main()
    